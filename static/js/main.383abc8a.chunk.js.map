{"version":3,"sources":["searchPhotos.js","App.js","reportWebVitals.js","index.js"],"names":["unsplash","Unsplash","accessKey","process","SearchPhotos","useState","query","setQuery","pics","setPics","searchPhotos","e","a","preventDefault","search","photos","then","toJson","json","results","className","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","map","pic","alt","alt_description","src","urls","full","width","height","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIMA,EAAW,IAAIC,IAAS,CAACC,UAAWC,gDAE3B,SAASC,IAEtB,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAEE,iBAEFb,EAASc,OAAOC,OAAOT,EAAO,EAAG,IAChCU,KAAKC,UACLD,MAAK,SAACE,GAELT,EAAQS,EAAKC,YAPI,2CAAH,sDAWlB,OAEE,cADA,CACA,sBACA,uBAAMC,UAAU,OAAOC,SAAUX,EAAjC,UACE,wBAAOU,UAAU,QAAQE,QAAQ,QAAjC,UACC,IADD,kBAIA,uBAAOC,KAAK,OAAOC,KAAK,QAAQJ,UAAU,QAAQK,YAAW,0BAA6BC,MAAOpB,EAAOqB,SAAU,SAAChB,GAAD,OAAMJ,EAASI,EAAEiB,OAAOF,UAC1I,wBAAQH,KAAK,SAASH,UAAU,SAAhC,uBAIF,qBAAKA,UAAU,YAAf,SAEIZ,EAAKqB,KAAI,SAACC,GAAD,OACP,qBAAKV,UAAU,OAAf,SACE,qBAAKA,UAAU,aACfW,IAAKD,EAAIE,gBACTC,IAAKH,EAAII,KAAKC,KACdC,MAAM,MACNC,OAAO,SALkBP,EAAIQ,YC7B1BC,MAVf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCAA6C,cAAChB,EAAD,UCItCoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.383abc8a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Unsplash, { toJson } from 'unsplash-js';\r\n// toJson is a helper function in the unsplash-js library that is used\r\n\r\nconst unsplash = new Unsplash({accessKey: process.env.REACT_APP_UNSPLASH_API_KEY})\r\n\r\nexport default function SearchPhotos(){\r\n  // query stores the current state of component, setQuery is called to update the state\r\n  const [query,setQuery] = useState(\"\");\r\n  // console.log(query);\r\n\r\n  // state pics will store image response we get from unsplash api\r\n\r\n  // all the responses will be stored as object inside this state\r\n  const [pics, setPics] = useState([]);\r\n\r\n  const searchPhotos = async (e)=>{\r\n    e.preventDefault();\r\n    // console.log('submitting the form');\r\n    unsplash.search.photos(query, 1, 20)\r\n    .then(toJson)\r\n    .then((json)=>{\r\n      // console.log(json);\r\n      setPics(json.results);\r\n    })\r\n  }\r\n\r\n  return (\r\n    // form for input value \r\n    <>\r\n    <form className=\"form\" onSubmit={searchPhotos}>\r\n      <label className=\"label\" htmlFor=\"query\">\r\n      {\" \"}\r\n      ðŸ“·\r\n      </label>\r\n      <input type=\"text\" name=\"query\" className=\"input\" placeholder={`Try 'dog' or 'mountain'`} value={query} onChange={(e)=> setQuery(e.target.value)} />\r\n      <button type=\"submit\" className=\"button\">Search</button>\r\n    </form>\r\n\r\n    {/* map through the state and display the id of the image */}\r\n    <div className=\"card_list\">\r\n      {\r\n        pics.map((pic)=>\r\n          <div className=\"card\" key={pic.id}>\r\n            <img className=\"card_image\"\r\n            alt={pic.alt_description}\r\n            src={pic.urls.full}\r\n            width=\"50%\"\r\n            height=\"50%\">\r\n            </img>\r\n          </div>)\r\n      }\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport SearchPhotos from './searchPhotos.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 className=\"title\">React Photo Search</h1><SearchPhotos/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}